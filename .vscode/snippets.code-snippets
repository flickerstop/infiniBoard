{
	// Place your JrBot workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Setup the file": {
		"scope": "javascript",
		"prefix": "setup",
		"body": [
			"/////////////////////////////////////////////////////",
			"// File Name: $1",
			"",
			"",
			"/////////////////////////////////////////////////////",
			"// Requires",
			"// #region",
			"",
			"",
			"// #endregion",
			"/////////////////////////////////////////////////////",
			"// Vars",
			"// #region",
			"",
			"",
			"// #endregion",
			"/////////////////////////////////////////////////////",
			"// Exported Class",
			"module.exports = class {",
			"\tstatic test(){",
			"\t\treturn new Promise(async function(resolve, reject) {",
			"\t\t\treturn resolve();",
			"\t\t\treturn reject();",
			"\t\t});",
			"\t}",
			"}",
			"/////////////////////////////////////////////////////",
			"// Local Functions",
			"// #region",
			"",
			"",
			"// #endregion",
			"/////////////////////////////////////////////////////"
		],
		"description": "Sets up the entire file"
	},
	"Include Fs Extra": {
		"scope": "javascript",
		"prefix": "fs-extra",
		"body": [
			"const fs = require(\"fs-extra\");"
		],
		"description": "Adds in a const variable fs that requires fs-extra"
	},
	"Include Console": {
		"scope": "javascript",
		"prefix": "const console",
		"body": [
			"const console = require(\"../console/console.js\");"
		],
		"description": "Adds homemade console to the require"
	},
	"Console Log": {
		"scope": "javascript",
		"prefix": "log",
		"body": [
			"console.log($1);"
		],
		"description": "Adds a console.log"
	},
	"New Promise function":{
		"scope": "javascript",
		"prefix": "promise",
		"body": [
			"static $1($2){",
			"\treturn new Promise(async function(resolve, reject) {",
			"\t\t//=================================",
			"\t\t// Check if valid input",
			"\t\t",
			"\t\t//=================================",
			"\t\t// Process input",
			"\t\t",
			"\t\t//=================================",
			"\t\t// Process Output",
			"\t\t",
			"\t\t//=================================",
			"\t\t// Process Error",
			"\t\t",
			"\t\t",
			"\t});",
			"}",
		],
		"description": "Adds a new static promise function"
	},
	"Steps":{
		"scope": "javascript",
		"prefix": "steps",
		"body": [
			"//=================================",
			"// Step 1",
			"// ",
			"",
			"//=================================",
			"// Step 2",
			"// ",
			"",
			"//=================================",
			"// Step 3",
			"// ",
			"",
			"//=================================",
			"// Step 4",
			"// ",
			"",
			"//=================================",
			"// Step 5",
			"// ",
			"",
			
		],
		"description": "Adds steps to ease the commenting"
	}
}